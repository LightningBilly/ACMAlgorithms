题目链接 ：http://poj.org/problem?id=1037

题目大意：
栅栏是由1到N的一个全排列表示，这个排列必须满足以下性质：
(1 < i < N，下标从1开始) (a[i] – a[i−1])*(a[i] – a[i+1]) > 0。
对所有可能的栅栏按字典序排序，从中取出第C个。
给定N和C，输出由1到N数字组成的字典序排序是C的排列。

题解：
类似全排列构造，只是计数方法要改变一下。
由题意可知，要构造的排列的有一个特点，即两个相邻的数字会呈上升下降交替。
那么取第一个数字的时候就要知道取当前a的数字能不能有C种方法数，即以a数字开头的排列有多少种。
选第二个与第一个有所不同，因为受到了第一个的数字的限制，如果选择的数字b<a则要知道接下来的n-1个数字中以b开始并且呈上升趋势的排列有多少种。反之如果b>a则要知道n-1个数字中以b开始并且呈下降趋势的排列有多少种。
从第三个开始与选第二个类似，只是趋势已经固定了，有些数字不可以选了。

不妨设dp[i][j][d](i<j) 代表一共有j个数，在里大小边排第i位的数字开始并且趋势为d（d=[0,1], 0代表上升，1代表下降）的方法数有多少种。
由于一个数字的时候可以上升，也可以下降，则
Dp[1][1][0]=dp[1][1][1]=1;
对于dp[i][j][d]，我们可以先考虑一种趋势的，如d=0。
相当于我们把i选放到第一位，然后放剩下的j-1位。由于d=0意味着要上升，则第二位的数字要大于i。所以dp[i][j][0] = sum(dp[s-1][j-1]) (s = [i+1, j]) = sum(dp[s][j-1]) (s = [i, j-1])，相当于从j个数字中把i选拿走，那么大于i的数字在j-1中的排名都要减去一个1。
同理可得dp[i][j][0] = sum(dp[s][j-1]) (s = [1, i-1]) ，比i小的数字排名不变。

综合一下，转移方程如下：
Dp[1][1][0]=dp[1][1][1]=1;
dp[i][j][0] = sum(dp[s][j-1]) (s = [i, j-1]) (i<j, j>1)
dp[i][j][0] = sum(dp[s][j-1]) (s = [1, i-1]) (i<j, j>1)

接下来就是构造排列了。上文已经表述。


test cases: --后为答案
10
4 1
--
1 3 2 4
4 2
--
1 4 2 3
4 3
--
2 1 4 3
4 4
--
2 3 1 4
4 5
--
2 4 1 3
4 6
--
3 1 4 2
4 7
--
3 2 4 1
4 8
--
3 4 1 2
2 1
--
1 2
3 3
--
2 3 1
