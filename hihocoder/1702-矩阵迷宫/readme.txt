题目链接 ：http://hihocoder.com/problemset/problem/1702


解题思路：
典型的动态规划问题：
设dp[i][j][s][d] 为人站在I,j上目前已经转向了s次，朝向为d(0为向右，1为向下)时，总代价最小为多少，则ans = min{dp[n-1][n-1][s][d]} (s=[0-15], d=0,1); 
由于A[i][j]<=100 所以最多的代价也就100*200+1 解释为走200步，再加一个转向。所以当转向次数过多时是高于这个数的。可以判断出s最多只要15。
然后的话是转移议程
Dp[i][j][s][d] = min(
dp[i-1][j][s][d] + A[i][j] 上面直走来的
dp[i-1][j][s-1][d^1]+ A[i][j] +(1<<(s-1)) 上面拐过来的
dp[i][j-1][s][d]+ A[i][j]  左面直走来的
dp[i][j-1][s-1][d^1] + A[i][j] +(1<<(s-1)) 左面拐过来的
)

以上公式注意边界判断 如i-1>=0，j-1>=0, s-1>=0。
代码中是正推过去的，就是在当前的基础上走一个可以有几种走法。然后更新一下最优结果。

test cases 红色为答案路径word中有颜色

3  
1 3 5  
1 1 2  
5 1 1


1
1


5
1 2 3 4 5
5 4 3 2 1
3 4 2 1 5
3 2 3 4 1
1 1 1 1 1

5
1 1 3 4 5
5 1 1 2 1
3 4 2 1 5
3 2 3 4 1
1 1 1 1 1

5
1 1 3 4 5
5 1 1 2 1
3 4 1 1 5
3 2 1 4 1
1 1 1 1 1


